var documenterSearchIndex = {"docs":
[{"location":"conditions.html#Actions-and-Conditions-you-can-use-in-recipes","page":"Conditions and Actions for use in recipes","title":"Actions and Conditions you can use in recipes","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Pages = [\"conditions.md\"]\nDepth = 8","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"tip: Don't repeat yourself\nQuite often you will want to apply certain conditions or actions several times in a hierarchical template. In that case you can define common_actions and common_condtions in the [global] section, which you can refer to by name. Any of the actions and conditions below can be used to compose more complex actions and conditions.","category":"page"},{"location":"conditions.html#Actions","page":"Conditions and Actions for use in recipes","title":"Actions","text":"","category":"section"},{"location":"conditions.html#File/folder-name:","page":"Conditions and Actions for use in recipes","title":"File/folder name:","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"whitespace_to  usage: [\"whitespace_to\", \"_\"]\nquit\nproceed\nfilename\nshow_warning\nquit_on_fail\nlog_to_file\nignore\nsample\nsize_of_file\nadd_path_to_file_list\nremove\ndelete_file\ndelete_folder\npath_only\nfilepath\nshow_warning\nlog_to_file_with_message\nremove_from_to                    usage: [\"remove_from_to\", \"from_pattern\", \"to_pattern\"], see example_recipes/remove_pattern.toml\nremove_from_to_extension_inclusive\nremove_from_to_extension_exclusive\nremove_from_to_exclusive\nremove_from_to_inclusive\nremove_pattern\nreplace_pattern\nread_postfix_int\nread_prefix_int\nread_int\nread_postfix_float\nread_prefix_float\nread_float","category":"page"},{"location":"conditions.html#Aggregation","page":"Conditions and Actions for use in recipes","title":"Aggregation","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"When you use aggregation to combine files into lists, it can be helpful to transform filenames in a group, for example, ensuring only unique files are written to file, or they're sorted, rather than file traversal order.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Example","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"[global]\nact_on_success=true\nfile_lists = [{name=\"table\", aggregator=[[\"filepath\",\n                                          \"sort\",\n                                          \"unique\",\n                                          \"shared_list_to_file\"]]},\n              {name=\"out\", aggregator=[[[\"change_path\", \"/tmp/output\"],\n                                         \"filepath\",\n                                         \"sort\",\n                                         \"unique\",\n                                         \"shared_list_to_file\"]]}\n              ]\ninputdirectory = \"testdir\"\n[any]\nall=true\nconditions = [\"is_csv_file\"]\nactions=[[\"add_to_file_list\", \"table\"], [\"add_to_file_list\", \"out\"]]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"This example collects all csv files, records only the path, not the file name, and creates 2 lists, in input/output pairs. For example for files:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"/a/b/c/1.csv\n/a/b/c/2.csv","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"You will get two files:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"#table.txt\n/a/b/c  # The sorted unique path to 1, 2.csv","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"and","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"#out.txt\n/tmp/output/a/b/c  # The sorted unique path to 1, 2.csv linked to new output directory","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"This can be useful when you're generating input / output lists for batch processing, where you pipeline expects to see a directory with csv files, and wants to write output to an equivalent location starting at a different path. (e.g. SLURM array jobs)","category":"page"},{"location":"conditions.html#Content:","page":"Conditions and Actions for use in recipes","title":"Content:","text":"","category":"section"},{"location":"conditions.html#Image-operations","page":"Conditions and Actions for use in recipes","title":"Image operations","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"These operations fall into 3 categories:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Increase dimension, e.g. 10 2D images to 1 3D\nDecrease/reduce dimension, e.g. 10 2D images to 1 2D, or 1 3D to 1 2D\nKeep dimension, but change voxels, but not dimension, e.g. mask, filter, ...\nKeep dimension, but reduce size: image slicing","category":"page"},{"location":"conditions.html#N-to-N1-dimension:","page":"Conditions and Actions for use in recipes","title":"N to N+1 dimension:","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"stack_images","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"A special case:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"stack_images_by_prefix","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"This assumes you have files with a pattern like A_1.tif, A_2.tif, ..., B_1.tif. If each has K dimensions, you'll end up with 1 file per prefix (here 2), with K+1 dimensions.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"See the aggregation section for details.","category":"page"},{"location":"conditions.html#N-to-N-1-dimension:","page":"Conditions and Actions for use in recipes","title":"N to N-1 dimension:","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"For aggregation (combine many images in N x 2D to 1 x 2D):","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"reduce_images\n#usage\n[\"reduce_images\", [\"maximum\", 3]] for max projection on Z","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"For per image reduction (1 image, 3D -> 2D):","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"reduce_image + maximum, minimum, median, mean + dim : 1-N\n# example:\n[\"reduce_image\" ,[\"maximum\", 2]]","category":"page"},{"location":"conditions.html#N-to-N","page":"Conditions and Actions for use in recipes","title":"N to N","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"The image dimensions stays the same, but the voxels are modified","category":"page"},{"location":"conditions.html#Transform-image","page":"Conditions and Actions for use in recipes","title":"Transform image","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"mask\nlaplacian\ngaussian, sigma\nimage_opening\nimage_closing\nerode_image\ndilate_image","category":"page"},{"location":"conditions.html#Image-thresholding","page":"Conditions and Actions for use in recipes","title":"Image thresholding","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"threshold_image, operator, value\notsu_threshold_image","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"where operator can be any of \"<\", \">\", \"=\", \"abs operator\"","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"For example","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"\"threshold_image\", \"abs >\", 0.2","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Sets all voxels where the magnitude (unsigned) > 0.2 to 0.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"otsu_threshold computes the threshold automatically.","category":"page"},{"location":"conditions.html#Resize/slice","page":"Conditions and Actions for use in recipes","title":"Resize/slice","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"slice_image, dimension, slice\nslice_image, dimension, slice_from, slice_to\nslice_image, [dimensions], [slices]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"For example","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"\"slice_image\", [1,3], [[200,210],[1,200]]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"which is equivalent to","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"img[200:210,:,1:200]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"!!! warning Indexing     Julia indices into array, image, tables, start at 1, not 0. This is similar to Matlab, but unlike C/Python.     Dimension=1 refers to the X-axis, and so forth.","category":"page"},{"location":"conditions.html#Image-statistics","page":"Conditions and Actions for use in recipes","title":"Image statistics","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"To get a CSV table of statistics of the image intensity distribution you can do","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"describe_image[, axis]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Without axis 1 row per image is produced, with axis the distribution is computed along gives axis. Example:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"   minimum    Q1        mean      median    Q3        maximum  std       kurtosis  axis   source  slice\n   Float64    Float64   Float64   Float64   Float64   Float64  Float64   Float64   Int64  String  Int64\n│  0.0156863  0.258824  0.485621  0.454902  0.730392      1.0  0.283031    6.6581      0  1.tif       1","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"To describe objects in an image (assuming it's thresholded or can be binarized) (3D only)","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"describe_objects","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Example","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"size     weighted  minimum    Q1        mean      median    Q3        maximum  std       kurtosis  xyspan   zrange   zmidpoint  filename\nFloat64  Float64   Float64    Float64   Float64   Float64   Float64   Float64  Float64   Float64   Float64  Float64  Float64    String\n216.0   104.894  0.0156863  0.258824  0.485621  0.454902  0.730392      1.0  0.283031    6.6581  8.48528      6.0       23.0    ...","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"You can use this in aggregation, for example, to describe all objects in all channel 1 tifs","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"[global]\n...\nfile_lists = [{name=\"objects\", aggregator=[[\"describe_objects\",\n                                          \"concat_to_table\"]]},]\n...\n[any]\nall=true\nconditions = [\"is_tif_file\"]\nactions=[[\"\"aggregato_to\", \"objects\"]]","category":"page"},{"location":"conditions.html#Table-operations","page":"Conditions and Actions for use in recipes","title":"Table operations","text":"","category":"section"},{"location":"conditions.html#Aggregation-2","page":"Conditions and Actions for use in recipes","title":"Aggregation","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"concat_table","category":"page"},{"location":"conditions.html#Select-columns","page":"Conditions and Actions for use in recipes","title":"Select columns","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"extract_columns  usage: [\"extract_columns\", [\"x1\", \"x2\"]]","category":"page"},{"location":"conditions.html#Select/extract/delete-rows-based-on-column-values","page":"Conditions and Actions for use in recipes","title":"Select/extract/delete rows based on column values","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"[command, [[columnname, operator, arguments],...]]\n# or\n[command, [columnname, operator, arguments]]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"where 'command' is one of extract, delete.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"The operator is one of:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"less, leq, smaller than, more, greater than, equals, euqal, is, geq, isnan, isnothing, ismissing, iszero, <, >, <=, >=, ==, =, in, between, [not, operator]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"warning: Warning\nDo not use 'col','=','NaN' but 'col', 'isnan'. Similar for iszero, isnothing, ... . Floating point rules specify that Nan!=Nan, so your condition will always be false.","category":"page"},{"location":"conditions.html#Between","page":"Conditions and Actions for use in recipes","title":"Between","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"To express 1 < a < 2, where a is a column name, you could write","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"[\"a\", \">\", 1], [\"a\",\"<\", 2]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"You can save yourself typing, and just write:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"[\"a\", \"between\", [1, 2]]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"warning: Warning\nMake sure you pass a vector of 2 values!!","category":"page"},{"location":"conditions.html#in","page":"Conditions and Actions for use in recipes","title":"in","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"To find all values of a column in a defined set:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"[\"a\", \"in\", [2,3,5]]","category":"page"},{"location":"conditions.html#Negating","page":"Conditions and Actions for use in recipes","title":"Negating","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"You can also negate an operator, if that makes sense for your use case:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"[\"a\"], [\"not\" \"in\"], [[2,3,5]]\n[\"a\"], [\"not\" \"between\"], [[1, 2]]","category":"page"},{"location":"conditions.html#Conditions","page":"Conditions and Actions for use in recipes","title":"Conditions","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Each action can only be applied if a condition fires. This is a list of all conditions you can use, alone, in action-condition pairs, combined (with all=true), or nested:","category":"page"},{"location":"conditions.html#File/directory-name-conditions","page":"Conditions and Actions for use in recipes","title":"File/directory name conditions","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"integer_name # file or directory name is an integer, e.g. \"2\", \"003\", but not \"One\" or \"_1\"\nis_lower\nis_upper\nhas_whitespace\nhas_upper\nhas_lower\nis_hidden[_dir, _file]\nhas_integer_in_name\nhas_float_in_name\nfilename_ends_with_integer","category":"page"},{"location":"conditions.html#Directories","page":"Conditions and Actions for use in recipes","title":"Directories","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"isdir/isfile\nhas_n_files\nn_files_or_more\nless_than_n_files\nhas_n_subdirs\nless_than_n_subdirs","category":"page"},{"location":"conditions.html#File-type-checks","page":"Conditions and Actions for use in recipes","title":"File type checks","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"These check by file extension, they do NOT open files. Opening a file, or trying to figure out by not failing, is a slow operation compared to checking file extensions. You'll have to decide which is more appropriate, there are is_img and variants that do load an image to check.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"is_csv_file\nis_tif_file\nis_png_file\nhas_image_extension\nis_type_file # usage : [\"is_type_file\", \".csv\"]\nfile_extension_one_of # usage : [\"file_extension_one_of\", [\".csv\", \".txt\", \".xyz\"]]","category":"page"},{"location":"conditions.html#Image-specific","page":"Conditions and Actions for use in recipes","title":"Image specific","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"!!! note Content type testing     Testing if a file is an image means passing it to the image library and letting it try loading the file. For large files this can be expensive.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"So instead of:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"is_img","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"it's smarter to do:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"[\"is_file\", \"is_tif_file\", \"is_img\"]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"!!! note RGB v 3D     Julia uses the convention that RGB != 3D, which saves you from a lot of disambiguation. For example, is 10x10x10 32bit an RGB+alpha 3D image? Or just a 32bit Float 3D image? Julia will load the right type from the file, so it's one less worry.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"is_img    # NOT the same as has_image_extension, this will try to load the file\nis_kd_img # usage [\"is_kd_img\", 3]\nis_2d_img\nis_3d_img\nis_rgb\nis_8bit_img\nis_16bit_img","category":"page"},{"location":"conditions.html#Checking-image-dimensions","page":"Conditions and Actions for use in recipes","title":"Checking image dimensions","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Either to verify correct data layout, or when you're going to slice images, it's handy to be able to check dimensions","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"size_image, [[dimension, operator, limit(s)],..]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Example:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"\"size_image\", [[1, \">\", 4], [2, \">\", 4], [3, \"between\", [1, 1000]]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Operators: >, <, =, >=, <=, between, in","category":"page"},{"location":"conditions.html#Table-specific","page":"Conditions and Actions for use in recipes","title":"Table specific","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Table refers here to tabular data contained in CSV files, loading into Julia DataFrames. In short, if it has columns and rows, in a csv, it's a table.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Useful before you concatenate tables:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"has_n_columns\nhas_less_than_n_columns\nhas_more_than_or_n_columns","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Checking if your table has the right columns:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"has_columns_named  # usage [\"has_columns_named\", [\"Age\", \"Heart Rate\"]]","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"This checks if those 2 columns are in the table, not if those are the only 2 columns.","category":"page"},{"location":"conditions.html#General","page":"Conditions and Actions for use in recipes","title":"General","text":"","category":"section"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"always, never","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"Self-explanatory, sometimes handly:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"always = x -> true\nnever = x -> false","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"If you're testing conditions, you can use these as placeholders, for example.","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"If you're not familiar with Julia, the following are builtin:","category":"page"},{"location":"conditions.html","page":"Conditions and Actions for use in recipes","title":"Conditions and Actions for use in recipes","text":"maximum/minimum/median/mean\nsize\nisfile\nisdir\nispath\nsplitpath\nsplitdir\nsplitext\nbasename\nlength\nsum\nisnothing","category":"page"},{"location":"usage.html#Usage","page":"-","title":"Usage","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"Pages = [\"usage.md\"]\nDepth = 8","category":"page"},{"location":"usage.html#Using-recipes-only","page":"-","title":"Using recipes only","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"./DataCurator.sif -r myrecipe.toml [---verbose]","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"or a bit more advanced:","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"singularity exec DataCurator.sif julia --project=/opt/DataCurator.jl --sysimage /opt/DataCurator.jl/sys_img.so /opt/DataCurator.jl/src/curator.jl --recipe myrecipe.toml","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"You can see why we made the executable image with the very short command, right?","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"However, it can be useful to explore the package more inside the singularity image","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"singularity exec DataCurator.sif julia <your script>","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"You can also open a shell inside the image","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"singularity shell DataCurator.sif\nsingularity>julia\njulia 1.x>","category":"page"},{"location":"usage.html#Recipes-Julia","page":"-","title":"Recipes + Julia","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"Either run this in the image, or with the package","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"using DataCurator\nresult = create_template_from_toml(\"recipe.toml\")\nif ~isnothing(result) # result will be nothing if something went wrong creating your template\n  c, t = res\n  counters, lists, returnvalue = delegate(c, t)\nend","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"You can next iterate over the counters or lists, if needed. Note that aggregation operations at that point have completed.","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"for counter in counters\n    @info counter\nend","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"See the API reference for full details.","category":"page"},{"location":"usage.html#Using-the-Julia-API-a-name\"julia\"/a","page":"-","title":"Using the Julia API <a name=\"julia\"></a>","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"When you can write Julia you can do anything the template recipes allow and extend it with your own functions, compile more complex functions, and so forth. In this section we'll walk you through how to do this.","category":"page"},{"location":"usage.html#Typesafe-templates","page":"-","title":"Typesafe templates","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"We heavily use Julia's multiple type dispatch system, so when you make a template","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"template = [mt(is_tif_file, show_warning)]","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"it is internally transformed to a named tuple","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"template[1].condition == is_tif_file # true\ntemplate[1].action == show_warning","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"As a user this may not be relevant to you, but it does help in simplifying the code and optimizing the execution quite dramatically. The Julia compiler for example knows the difference at compile time between","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"fs = [is_tif_file, show_warning, quit]\nA = mt(fs...) # condition, action, counteraction\nfs = [is_tif_file, show_warning]\nB = mt(fs...) # condition, action","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"A and B are resolved at compile time, not at runtime, improving execution speed while ensuring type safety.","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"To put it differently, your template is usually precompiled, not interpreted, as it would be in bash/Python scripts.","category":"page"},{"location":"usage.html#Examples","page":"-","title":"Examples","text":"","category":"section"},{"location":"usage.html#Replace-whitespace-and-uppercase","page":"-","title":"Replace whitespace and uppercase","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"Rename all files/directories with ' ' in them to '_' and switch any uppercase to lowercase.","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"condition = x -> is_upper(x) | has_whitespace(x)\nfix = x -> whitespace_to(lowercase(x), '_')\naction = x -> transform_inplace(x, fix)\ntransform_template(rootdirectory, [mt(condition, action)]; act_on_success=true)","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"Next, we verify our dataset has no uppercase/whitespace in names.","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"count, counter = generate_counter()\nverify_template(rootdirectory, [mt(condition, counter)]; act_on_success=true)\n@info count","category":"page"},{"location":"usage.html#Flatten-a-file-hierarchy","page":"-","title":"Flatten a file hierarchy","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"action = x->flatten_to(root, x, newdirectory)\nverify_template(root, [mt(isfile, action)]; act_on_success=true)","category":"page"},{"location":"usage.html#Extract-all-3D-tif-files-to-a-single-directory","page":"-","title":"Extract all 3D tif files to a single directory","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"Note, this will halt if the images it extracts exist on the target directory.","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"trigger = x-> is_3d_img(x)\naction = x->flatten_to(root, x, image_directory)\nverify_template(root, [mt(trigger, action)]; act_on_success=true)","category":"page"},{"location":"usage.html#Sort-2D-image-and-csv-files-into-separate-directories","page":"-","title":"Sort 2D image and csv files into separate directories","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"img_action = x->flatten_to(root, x, image_directory)\ncsv_action = x->flatten_to(root, x, csv_directory)\nverify_template(root, [(mtis_2d_img, img_action), (is_csv_file, csv_action)]; act_on_success=true)","category":"page"},{"location":"usage.html#Compute-size-in-bytes-of-a-large-hierarchy-in-parallel","page":"-","title":"Compute size in bytes of a large hierarchy in parallel","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"count, counter = generate_size_counter()\nverify_template(\"rootdirectory\", [mt(isfile, counter)]; act_on_success=true)\n@info \"Size of matched files = $(count) bytes\"","category":"page"},{"location":"usage.html#Compute-size-of-2-vs-3D-images-separately","page":"-","title":"Compute size of 2 vs 3D images separately","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"count2, counter2 = generate_size_counter()\ncount3, counter3 = generate_size_counter()\nverify_template(\"rootdirectory\", [mt(is_2d_img, counter2),(is_3d_img, counter3)]; act_on_success=true)\n@info \"$(count2) bytes of 2D images, $(count3) of 3D images\"","category":"page"},{"location":"usage.html#Hierarchical-recipes","page":"-","title":"Hierarchical recipes","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"Suppose your data is supposed to have this layout","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"root\nreplicate nr\ncelltype\ncell nr : of the form \"Series XYZ\"\n2 tif files, 3D, ending with 1,2.tif","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"You can use hierarchical templates, that give you very precise control of where a condition fires","category":"page"},{"location":"usage.html#Create-a-hierarchical-template","page":"-","title":"Create a hierarchical template","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"onfail = x->show_warning\ntemplate = Dict()","category":"page"},{"location":"usage.html#First,-define-what-to-do-with-unexpected-directories/files","page":"-","title":"First, define what to do with unexpected directories/files","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"template[-1] = [mt(never, onfail)]","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"never is a shortcode symbol for 'will never pass'","category":"page"},{"location":"usage.html#At-root,-we-only-expect-sub-directories","page":"-","title":"At root, we only expect sub directories","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"template[1] = [mt(isdir, onfail)]","category":"page"},{"location":"usage.html#Replicate-should-be-integer","page":"-","title":"Replicate should be integer","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"template[2] = [mt(x->all_of(x, [isdir, integer_name]), onfail)]","category":"page"},{"location":"usage.html#Celltype-should-only-be-subdirs","page":"-","title":"Celltype should only be subdirs","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"template[3] = [mt(isdir, onfail)]","category":"page"},{"location":"usage.html#Lowest-data-directory-should-end-with-cell-nr,-and-have-2-or-more-files","page":"-","title":"Lowest data directory should end with cell nr, and have 2 or more files","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"inputdir_check = x->all_of(x, [isdir, x->ends_with_integer(x), x->n_files_or_more(x, 2)])\ntemplate[4] = [mt(inputdir_check, onfail)]","category":"page"},{"location":"usage.html#Actual-files-should-be-3D-images","page":"-","title":"Actual files should be 3D images","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"file_check = x -> is_tif_file(x) & is_3d_img(x) & endswith(x, r\"[1,2].tif\")\ntemplate[5] = [mt(file_check, onfail)]","category":"page"},{"location":"usage.html#Execute","page":"-","title":"Execute","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"verify_template(root, template; traversalpolicy=topdown, parallel_policy=\"parallel\")","category":"page"},{"location":"usage.html#Advanced","page":"-","title":"Advanced","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"You are free to define even more complex actions, for example, triggers that fire on invalid data AND valid data in 1 template. For example, let's say we expect csv files, and if we find tif files, then we delete those, otherwise we just warn.","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"template[y] = [mt(x->~is_tif_file(x), delete_file), mt(is_csv_file, onfail)]","category":"page"},{"location":"usage.html#Fire-triggers-when-they-are-true,-not-when-they-fail","page":"-","title":"Fire triggers when they are true, not when they fail","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"If it's hard to define conditions that should succeed, you can reverse the firing conditions, but more easily readable is just asking the verifier to do so for you","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"verify_template(root, template; act_on_succes=true)","category":"page"},{"location":"usage.html#Parallel-execution","page":"-","title":"Parallel execution","text":"","category":"section"},{"location":"usage.html","page":"-","title":"-","text":"All recipes can be executed in parallel. Counters are protected so they are threadsafe, yet need no locks.","category":"page"},{"location":"usage.html","page":"-","title":"-","text":"count, counter = generate_counter(true; incrementer=size_of_file)\nverify_template(\"rootdirectory\", [mt(condition, counter)]; parallel_policy=\"parallel\", act_on_success=true)\n@info \"Size of matched files = $(count) bytes\"","category":"page"},{"location":"documented_recipe.html#A-recipe-using-all/most-of-the-possible-features","page":"Documented recipe with all features","title":"A recipe using all/most of the possible features","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"First, a recipe is a plain text file, in TOML format, designed to be as human friendly as possible.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"We'll run through all, or most of the features you can use, with example TOML snippets.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Pages = [\"documented_recipe.md\"]\nDepth = 8","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Any recipe needs 2 parts, the global configuration, and the actual template.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The global configuration specifies how the template is applied, the template specifies the conditions/rules to apply, i.o.w. the what and when.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"A section in a TOML file is simply:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[mysectionname]\nmycontent=\"some value\"","category":"page"},{"location":"documented_recipe.html#Global-section","page":"Documented recipe with all features","title":"Global section","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"All a minimum global section needs is where to start:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"inputdirectory=\"your/directory\"","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Next, we can either act on failure (usually in validation), or on success. This simply means that, if set to false, we check for any data that fails the rule you specify, then execute your actions. In datacuration you'll want the inverse, namely, act on success.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"tip: You can have your cake and eat it\nYou can specify actions AND counter_actions, allowing you to specify what to do if a rule applies, and what if it doesn't. In other words, you have maximal freedom of expression.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"act_on_success=false # default","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"We can also specify how we traverse data, from the deepest to the top (bottomup), or topdown. If you intend to modify files/directories in place, bottomup is the safer option.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"traversal=\"bottomup\" # or topdown","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"We can validate or curate data in parallel, to maximize throughput. Especially on computing clusters this can speed up completion time. If true, will use as many threads as JULIA_NUM_THREADS (usually nr of HT cores).","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"note: Thread safety\nYou do not need to worry about data races, where you get non-deterministic or corrupt results, if you stick to our conditions and aggregations, there are no conflicts between threads.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"parallel=true #default false","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"By default your rules are applied without knowing how deep your are in your dataset. However, at times you will need to know this, for example, to verify that certain files only appear in certain locations, or check naming patterns of directories. For example, a path like top/celltype/cellnr will have a rule to check for a cell number (integer) at level 3, not anywhere else. To enable this:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"# If true, your template is more precise, because you know what to look for at certain levels [level_i]\n# If false, define your template in [any]\nhierarchical=true","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"For more complex pattern matching you may want to use Regular Expressions (regex), to enable this:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"# If true, functions accepting patterns (endswith, startswith), will have their argument converted to a regular expression (using PRCE syntax)\nregex = false","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The inputdirectory should point to your dataset. The outputdirectory is where global output is written, e.g. output of aggregation.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"inputdirectory=...\noutputdirectory=...","category":"page"},{"location":"documented_recipe.html#Saved-actions-and-conditions","page":"Documented recipe with all features","title":"Saved actions and conditions","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Quite often you will define actions and conditions several time. Instead of repeating yourself, you can define actions and conditions globally, and then refer from your template to them later. For example:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"common_actions = {react=[[\"all\", \"show_warning\", [\"log_to_file\", \"errors.txt\"], \"remove\"]]}\ncommon_conditions = {is_3d_channel=[[\"all\", \"is_tif_file\", \"is_3d_img\", \"filename_ends_with_integer\"]]}","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"In your template you can then do","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"actions=[\"react\"]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"instead of","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"actions=[[\"all\", \"show_warning\", [\"log_to_file\", \"errors.txt\"], \"remove\"]]]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"This is useful because:     - default actions/conditions are more concisely expressed and reused     - composing complex rules without running out of screen real estate     - more legible     - if you want to change a complex rule, you only need to do so in 1 place     - for Julia, instead of multiple executable rules, there's now 1","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The reference syntax is","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"common_..={name1=[[\"all\", f1, f2, f3, ...]], name2=...}","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Where f1, f2, ... are conditions/actions, and name1 will be a placeholder you can reference later to.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"note: Nested [[]]\nHere you need to use the explicit nested form for anything more than 1 action/condition, because all=true is implied. Note that this section is parsed before the template itself is seen at all.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"!!! warning Common actions/conditions cannot refer to others when you're defining them.     If this was possible, we'd run the risk of deadlock, where actions refer to themselves in a loop, for example. If you need this kind of functionality, it's better to use the Julia API.","category":"page"},{"location":"documented_recipe.html#Aggregation","page":"Documented recipe with all features","title":"Aggregation","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Aggregation is a complex word for use cases like:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"counting files matching a pattern\ncounting total size of a selection of files\nmaking lists of input/output pairs for pipelines\ncombining 2D images into 1 3D image\ncombining 2D images, sorted by prefix (e.g. 'abc1.tif', 'abc2.tif', 'cde1.tif', 'cde2.tif' -> abc.tif, cde.tif)\nselecting specific columns from each csv you find, and fusing all in 1 table\nfinding files that match a pattern, sort them, find only unique ones, and then save them in a file or table","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"You can do any of these all at the same time with counters and file_lists in the global section:","category":"page"},{"location":"documented_recipe.html#Counters","page":"Documented recipe with all features","title":"Counters","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"counters = [\"C1\", [\"C2\", \"size_of_file\"]]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Here we created 2 counters, one that is incremented whenever you refer to it, and one that when you pass it a fily, records it total size in bytes. When the program finishes, these counters are printed.","category":"page"},{"location":"documented_recipe.html#File-aggregation","page":"Documented recipe with all features","title":"File aggregation","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The simplest kind just adds a file each time you refer to it, and writes them out in traversal order (per thread if parallel) at the end to \"infiles.txt\"","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists = [\"infiles\"]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"To make input-output pairs you'd do","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists = [\"infiles\", [\"outfiles\", \"outputpath\"]]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Let's say we add a file \"a/b/c.txt\" to infiles, when we add it to outfiles it will be recorded as: \"/outputpath/a/b/c.txt\" This is a common use case in preparing large batch scripts on SLURM clusters.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"What if we want to collect files or paths, but instead of collecting them in order of traversal (discovery), we want to sort them first, and only keep the path, not the filenames.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists = [{name=\"mylist\", aggregator=[[\"filepath\",\n                                          \"sort\",\n                                          \"unique\",\n                                          \"list_to_file\"]]},","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"So the following","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"/a/b/1/1.csv\n/a/b/1/2.csv\n/a/b/2/1.csv\n/a/b/2/2.csv\n/a/b/2.csv","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"would be written as a mylist.txt containing","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"/a/b/1\n/a/b/2\n/a/b","category":"page"},{"location":"documented_recipe.html#Image-aggregation","page":"Documented recipe with all features","title":"Image aggregation","text":"","category":"section"},{"location":"documented_recipe.html#Stacking-2D-images","page":"Documented recipe with all features","title":"Stacking 2D images","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists = [{name=\"3dstack.tif\", aggregator=\"stack_images\"}]","category":"page"},{"location":"documented_recipe.html#Maximum-projection-of-3D-images-along-the-Y-axis,-then-stack-them.","page":"Documented recipe with all features","title":"Maximum projection of 3D images along the Y axis, then stack them.","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists = [{name=\"3dstack.tif\", transformer=[\"reduce_images\", [\"maximum\", 2]],aggregator=\"stack_images\"}]","category":"page"},{"location":"documented_recipe.html#Describe-intensity-of-each-image,-per-slice,-and-concatenate-to-table","page":"Documented recipe with all features","title":"Describe intensity of each image, per slice, and concatenate to table","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists = [{name=\"image_stats\", transformer=[\"describe_image\", 3], aggregator=\"concat_to_table\"}]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"For each image added to the list, it'll slice the image along the z axis and create a table with statistics on intensity (min, mean, std, kurtosis, Q1, ...), for example:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"│  Row │ minimum     Q1        mean      median    Q3        maximum   std       kurtosis  slice  axis   source\n│      │ Float64     Float64   Float64   Float64   Float64   Float64   Float64   Float64   Int64  Int64  String7\n│─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────\n│    1 │ 0.00784314  0.245098  0.508418  0.501961  0.760784  0.996078  0.291711   6.71003      1      3  1.tif\n│    2 │ 0.00392157  0.242157  0.490539  0.482353  0.741176  1.0       0.290982   6.60052      2      3  1.tif\n...","category":"page"},{"location":"documented_recipe.html#Stack-images,-sorting-by-prefix","page":"Documented recipe with all features","title":"Stack images, sorting by prefix","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Sometimes image datasets have files like","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"root\n├── patient1\n│   ├── patient1_slice_1.tif\n│   └── patient1_slice_2.tif\n│   └── ...\n├── patient2\n│   ├── patient2_slice_1.tif\n│   └── patient2_slice_2.tif\n│   └── ...\n...","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"We'd like to combine these into","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"- patient1.tif (3D)\n- patient2.tif (3D)","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The solution is straightforward, we aggregate but ask to group by prefix","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists = [{name=\"slices\", aggregator=\"stack_images_by_prefix\"}]","category":"page"},{"location":"documented_recipe.html#Table-aggregation","page":"Documented recipe with all features","title":"Table aggregation","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists = [{name=\"all_ab_columns.csv\", transformer=[\"extract_columns\", [\"A\", \"B\"]], aggregator=\"concat_to_table\"}]","category":"page"},{"location":"documented_recipe.html#Template","page":"Documented recipe with all features","title":"Template","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"A template has 2 kind of entries [any] and [level_X]. You will only see the level_X entries in hierarchical templates, then X specifies at which depth you want to check a rule.","category":"page"},{"location":"documented_recipe.html#Flat-templates,-the-Any-section","page":"Documented recipe with all features","title":"Flat templates, the Any section","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[any]\nall=false #default, if true, fuses all conditions and actions. If false, you list condition-action pairs.\nconditions=[\"is_tif_file\", [\"has_n_files\", 10]]\nactions=[\"show_warning\", [\"log_to_file\", \"decathlon.txt\"]]\ncounter_actions=[[\"add_to_file_list\", \"mylist\"], [\"log_to_file\", \"not_decathlon.txt\"]] ## Optional","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The add_to_file_list will pass any file or directory for which is_tif_file = true (see act_on_success) to a list you defined earlier called \"mylist\". You specified in the global section what needs to be done with those files at the end. You do not need counter_actions.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"tip: Negation and logical and\nYou can also negate and fuse conditions/actions. Actions can not be negated.conditions=[[\"not\", \"is_tif_file\"], [\"all\", \"is_2d_img\", \"is_rgb\"]]]This is useful if you want to check for multiple things, but each can be quite complex. In other words, you want pairs of condition-action, so all=false, yet each pair is a complex rule.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"tip: Aliases\nadd_to_file_list is aliased to aggregate_to, use whichever makes more sense in reading the recipe.","category":"page"},{"location":"documented_recipe.html#Hierarchical-templates,-with-level_X","page":"Documented recipe with all features","title":"Hierarchical templates, with level_X","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"All you now need to add is what to do at level 'X'","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nhierarchical=true\n...\n[level_3]\nconditions=...\nactions=...\n...","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"This will only be applied if, and only if, files and directories 3 levels (directories) deep are encountered.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Sometimes you do not know how deep your dataset can be, in that case you'll want a 'catch-all', in hierarchical templates this is now the role of any","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nact_on_success=true\n[any]\nconditions=[\"is_csv_file\"]\nactions=[\"show_warning\"]\n[level_3]\nconditions=[\"is_tif_file\", \"is_csv_file\"]\nactions=[[\"log_to_file\", \"tiffiles.txt\"], \"show_warning\"]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"This tiny template will write any tif file to tiffiles.txt. If it encounters csv files anywhere else, it will warn you.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Please see the directory example_recipes for more complex examples.","category":"page"},{"location":"documented_recipe.html#Advanced-usage","page":"Documented recipe with all features","title":"Advanced usage","text":"","category":"section"},{"location":"documented_recipe.html#Verify-a-complex,-deep-dataset-layout.","page":"Documented recipe with all features","title":"Verify a complex, deep dataset layout.","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"This is an example of a real world dataset, with comments.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"An example of a 'curated' dataset would look like this","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"root\n├── 1                           # replicate number, > 0\n│   ├── condition_1             # celltype or condition  # <- different types of GANs for generating data\n│   │   ├── Series005           # cell number\n│   │   │   ├── channel_1.tif   # first channel, 3D Gray scale, 16 bit\n│   │   │   ├── channel_2.tif   # second channel, 3D Gray scale, 16 bit\n...\n├── 2\n...","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Let's create a recipe for this dataset that simply warns for anything unexpected.","category":"page"},{"location":"documented_recipe.html#Global-section-2","page":"Documented recipe with all features","title":"Global section","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"We're validating data, so we'll specify what should be true, and only if our rules are violated, do we act. Hence act_on_success=false, which is the default. We have different rules depending on where in the hierarchy we check, so hierarchical=true. And finally, we need a place to start, so inputdirectory=root","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nhierarchical=true\ninputdirectory = \"root\"","category":"page"},{"location":"documented_recipe.html#The-template","page":"Documented recipe with all features","title":"The template","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"We specify what to do if we see anything that does not catch our (5-level) deep recipe, in the [any] section.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[any]\nconditions=[\"always_fails\"]        #if this rule ever is checked, say at level 10, it fails immediately\nactions = [\"show_warning\"]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Next, we define rules for each level. Levels:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"## Top directory 'root', should only contain sub directories\n\n[level_1]\nconditions=[\"isdir\"]\nactions = [\"show_warning\"]   # if we see a file, isdir->false, so show a warning\n## Replicate directory, should be an integer\n\n[level_2]\nall=true\nconditions=[\"isdir\", \"integer_name\"]  # again, no files, only subdirectories\nactions = [\"show_warning\"]\n\n## We don't care what cell types are named, as long as there's not unexpected data\n\n[level_3]\nconditions=[\"isdir\"]\nactions = [\"show_warning\"]\n\n## Final level, directory with 2 files, and should end with cell nr\n[level_4]\nall=true\nconditions=[\"isdir\", [\"has_n_files\", 2], [\"ends_with_integer\"]]\nactions = [\"show_warning\"]\n\n## The actual files, we complain if there's any subdirectories, or if the files are not 3D\n[level_5]\nall=true\nconditions=[\"is_tif_file\", [\"endswith\", \"[1,2].tif\"], [\"not\", \"is_rgb\"], \"is_3d_img\",]\nactions = [\"show_warning\"]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"tip: Short circuit to help to speed up conditions\nNote that we first check the file extension is_tif_file, and only then check the pattern endswidth ..., and only then actually look at the image type. Checking if an image is 3D or RGB requires loading it. Loading (potentially huge) files is slow and expensive, so this could mean we'd check 'is3dimg' for a csv file, which would fail, but in a very expensive way. Instead, our conditions short circuit. We specified all=true, so each of them has to be true, if 1 fails we don't need to check the others. By putting is_tif_file first, we avoid having to even load the file to check its contents. This is done automatically for you, as long as you keep to the left-right ordering, in general of cheap(or least strict) to expensive (most strict). In practice for this dataset, this means a runtime gain of 50-90% depending on how much invalid data there is.","category":"page"},{"location":"documented_recipe.html#Early-exit:","page":"Documented recipe with all features","title":"Early exit:","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"sometimes you want the validation or processing to stop immediately based on a condition, e.g. finding corrupt data, or because you're just looking for 1 specific type of conditions. This can be achieved fairly easily, illustrated with a trivial example that stops after finding something other than .txt files.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nact_on_success = false\ninputdirectory = \"testdir\"\n[any]\nall = true\nconditions = [\"isfile\", [\"endswith\", \".txt\"]]\nactions = [\"halt\"]","category":"page"},{"location":"documented_recipe.html#Regular-expressions:","page":"Documented recipe with all features","title":"Regular expressions:","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"For more advanced users, when you write \"startswith\" \"*.txt\", it will not match anything, because by default regular expressions are disabled. Enabling them is easy though","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nregex=true\n...\ncondition = [\"startswith\", \"[0-9]+\"]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"This will now match files with 1 or more integers at the beginning of the file name.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"!!! note Regex compilation errors on \"patterns\"     If you try to pass a regex such as \".txt\", you'll get an error complaining about PCRE not being able to compile your Regex. The reason for this is the lookahead/lookback functionality in the Regex engine not allowing such wildcards at the beginning of a regex. When you write \" .txt \", what you probably meant was 'anything with extension txt', but not the name \".txt\", which \" *.txt \" will also match. Instead, use \".\\.txt\". When in doubt, don't use a regex if you can avoid it. Similar to Kruger-Dunning, those who believe they can wield a regex with confidence, probably shouldn't.","category":"page"},{"location":"documented_recipe.html#Negating-conditions:","page":"Documented recipe with all features","title":"Negating conditions:","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"By default your conditions are 'OR'ed, and by setting all=yes, you have 'AND'. By flipping actiononsucces you can negate all conditions. So in essence you don't need more than that for all combinations, but if you need to specifically flip 1 condition, this will get messy. Instead, you can negate any condition by giving it a prefix argumet of \"not\".","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nact_on_success = true\ninputdirectory = \"testdir\"\nregex=true\n[any]\nall=true\nconditions = [\"isfile\", [\"not\", \"endswith\", \".*.txt\"]]\nactions = [[\"flatten_to\", \"outdir\"], \"show_warning\"]","category":"page"},{"location":"documented_recipe.html#Counteractions:","page":"Documented recipe with all features","title":"Counteractions:","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"When you're validating you'll want to warn/log invalid files/folders. But at the same time, you may want to do the actual preprocessing as well. This is where counteractions come in, they allow you to specify","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Do x when condition = true\nDo y when condition = false","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"A simple example, filtering by file type:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nact_on_success=true\ninputdirectory = \"testdir\"\n[any]\nconditions=[\"is_csv_file\"]\nactions=[[\"log_to_file\", \"csvs.txt\"]]\ncounter_actions = [[\"log_to_file\", \"non_csvs.txt\"]]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"or another use case is deleting a file that's incorrect, while transforming correct files in preparation for a pipeline, in 1 step.","category":"page"},{"location":"documented_recipe.html#Export-to-HDF5/MAT","page":"Documented recipe with all features","title":"Export to HDF5/MAT","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"You can save/export directly to HDF5 and MAT, so if you're curating a dataset consisting of files, but your pipeline (for good reason) works on HDF5, you can do so easily.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\n...\n[any]\nconditions = [\"is_tif_file\", \"is_csv_file\"]\nactions=[[\"add_to_hdf5\", \"img.hdf5\"], [\"add_to_mat\", \"csv.mat\"]]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"note: Note\nThe filename will be used as entry/variable in the MAT or HDF5 file, e.g. file->content.","category":"page"},{"location":"documented_recipe.html#Modifying-files-and-content","page":"Documented recipe with all features","title":"Modifying files and content","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"When you want precise control over what function runs on the content, versus the name of files, you can do so. This example finds all 3D tif files, does a median projection along Z, then masks (binarizes) the image as a copy with original filename in lowercase.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nact_on_success=true\ninputdirectory = \"testdir\"\n[any]\nconditions=[\"is_3d_img\"]\nactions=[{name_transform=[\"tolowercase\"], content_transform=[[\"reduce_image\", [\"maximum\", 2]], \"mask\"], mode=\"copy\"}]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The examples so far use syntactic sugar, they're shorter ways of writing the below, but in certain case where you need to get a lot done, this full syntax is more descriptive, and less error prone. It also gives DataCurator the opportunity to save otherwise excessive intermediate copies.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The full syntax for actions of this kind:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"actions=[{name_transform=[entry+], content_transform=[entry+], mode=\"copy\" | \"move\" | \"inplace\"}+]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Where entry is any set of functions with arguments. The + sign indicates \"one or more\". The | symbol indicates 'OR', e.g. either copy, move, or inplace.","category":"page"},{"location":"documented_recipe.html#Select-rows-from-CSVs-and-save-them","page":"Documented recipe with all features","title":"Select rows from CSVs and save them","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\nact_on_success=true\ninputdirectory = \"testdir\"\n[any]\nall=true\nconditions=[\"is_csv_file\", \"has_upper\"]\nactions=[{name_transform=[\"tolowercase\"], content_transform=[[\"extract\", (\"Count\", \"less\", 10)]], mode=\"copy\"}]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Table extraction has the following syntax:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[\"extract\", (col, op, vals)]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"or","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[\"extract\", (col, op)]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Wich then turns into:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"select rows where op1(col1, vals1) && op2(col2, vals2)","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"For example:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[\"extract\", (\"name\",\"=\",\"Bert\"),  (\"count\", \"<\", 10)]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Gives you a copy of the table with only rows where name='Bert' and count<10.","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"List of operators:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"less, leq, smaller than, more, greater than, equals, euqal, is, geq, isnan, isnothing, ismissing, iszero, <, >, <=, >=, ==, =, in, between, [not, operator]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The operators in and between expect an array of values:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"('count', 'in', [2,3,5])","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"and","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"('count', 'between', [0,100])","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"where the last is equivalent, but shorter (and faster) than:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"('count', '>', 0), ('count', '<', 100)","category":"page"},{"location":"documented_recipe.html#Aggregation-2","page":"Documented recipe with all features","title":"Aggregation","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"When you need group data before processing it, such as collecting files to count their size, write input-output pairs, or stack images, and so forth, you're performing a pattern of the form","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"output = reduce(aggregator, map(transform, filter(test, data)))","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Sounds complex, but it's intuitive, you","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"collect data based on some condition (filter)\ntransform it in some way (e.g. mask images, copy, ...)\ngroup the output and reduce it (all filenames to 1 file, ...)","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Examples of this use case:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Collect all CSV files, concat to 1 table\nCollect columns \"x2\" and \"x3\" of CSV files whose name contains \"infected_C19\", and concat to 1 table\nCollect all 2D images, and save to 1 3D stack\nCollect all 3D images, and save maximum/minimum/mean/median projection","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The 2nd example is simply:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\n...\nfile_lists=[{name=\"group\", transformer=[\"extract_columns\", [\"x2\", \"x3\"]], aggregator=\"concat_to_table\"}]\n...\n[any]\nall=true\nconditions=[\"is_csv_file\", [\"contains\", \"infected_C19\"]]\nactions=[[\"add_to_file_list\", \"group\"]]","category":"page"},{"location":"documented_recipe.html#The-maximum-projection-of-2D-images","page":"Documented recipe with all features","title":"The maximum projection of 2D images","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"[global]\n...\nfile_lists=[{name=\"group\", aggregator=[\"reduce_images\", \"maximum\"]}]\n...\n[any]\nconditions=[\"is_2d_img\"]\nactions=[[\"add_to_file_list\", \"group\"]]","category":"page"},{"location":"documented_recipe.html#The-complete-grammar:","page":"Documented recipe with all features","title":"The complete grammar:","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists=[{name=name, transformer=identity, aggregator=shared_list_to_file}+]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"(X+) indicates at least one of X","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"The following aliases save you typing:","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists=[\"name\"]\n# is the same as\nfile_lists=[{name=name, transformer=identity, aggregator=shared_list_to_file}]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"file_lists=[[\"name\", \"some_directory\"]]\n# is the same as\nfile_lists=[{name=name, transformer=change_path, aggregator=shared_list_to_file}]","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"You're free to specify as many aggregators as you like.","category":"page"},{"location":"documented_recipe.html#Under-the-hood","page":"Documented recipe with all features","title":"Under the hood","text":"","category":"section"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"When you define a template, a 'visitor' will walk over each 'node' in the filesystem graph, testing any conditions when appropriate, and executing actions or counteractions. (Image: Concept)","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"In the background there's a lot more going on","category":"page"},{"location":"documented_recipe.html","page":"Documented recipe with all features","title":"Documented recipe with all features","text":"Managing threadsafe data structures\nResolving counters and file lists\nLooking up functions\nComposing functions and conditions\n...","category":"page"},{"location":"installation.html#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"Installation depends on what you plan to do, and what is available to you.","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"Pages = [\"installation.md\"]\nDepth = 8","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"You can install DataCurator in 4 ways:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"as a Julia package in your global Julia environment\nassumes you have Julia\nas a local package / cloned repository (no change to global)\nassumes you have Julia and git\ndownload a container / executable image recommended\nassumes you have a command line interface (WSL on Windows, any Linux or Mac)\nAs a Singularity image\nassumes you have Singularity installed\nassumes you have a command line interface (WSL on Windows, any Linux or Mac)","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"note: If you do not intend to write code, pick the container/image option\nThe container comes with Julia, so you don't need to install anything, and it has an optimized precompiled image of DataCurator inside so the startup time reduces to < 1s.","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"warning: Code snippets\nWhen we include a snippet like:julia\njulia>The 2nd julia> indicates how the user prompt has changed. It should not be copy-pasted. We do this only where it can help you to see what you should expect to see.","category":"page"},{"location":"installation.html#As-a-Julia-package","page":"Installation","title":"As a Julia package","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"You need:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"Julia","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"using Pkg;\nPkg.add(url=\"https://github.com/bencardoen/DataCurator.jl\")\nPkg.test(\"DataCurator\")\nusing DataCurator","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"or interactively","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"julia> ] # typing right bracket opens package manager\npkg 1.x> add https://github.com/bencardoen/DataCurator.jl\npkg 1.x> test DataCurator","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"tip: Julia's package manager\nJulia's package manager can be invoked with Julia commands, but also responds to interactive use in the REPL (Julia command line).]\n<cmd> <argument>\n# is the same as\nusing Pkg; Pkg.cmd(argument)Where cmd is usually one of test, add, activate, ...","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"Note: when this repo is private this will prompt for username and github token (not psswd)","category":"page"},{"location":"installation.html#As-a-local-repository","page":"Installation","title":"As a local repository","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"You need:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"Julia\ngit","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"git clone git@github.com:bencardoen/DataCurator.jl.git ## Assumes ssh\n# git clone https://github.com/bencardoen/DataCurator.jl.git ## For non SSH\ncd DataCurator.jl\njulia\njulia>using Pkg; Pkg.activate(\".\"); Pkg.instantiate(); Pkg.test();","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"note: Github's switch to tokens\nRecently Github has been noted to favor token based logins, that won't matter if this repository is public, but while it's not, and you do not use SSH keys, ensure you switch from password to token.","category":"page"},{"location":"installation.html#As-an-executable-image","page":"Installation","title":"As an executable image","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"You need:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"A command line environment (WSL on windows, any shell on Linux or MAC)","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"You'll download an image, which is a stand alone environment we prepare for you, with all dependencies. You don't need Julia, nor Singularity, but you do need some way of interacting with it on the command line.","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"See Sylabs for up to date images.","category":"page"},{"location":"installation.html#As-a-Singularity-container","page":"Installation","title":"As a Singularity container","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"You need:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"A command line environment (WSL on windows, any shell on Linux or MAC)\nSingularity","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"singularity pull --arch amd64 library://bcvcsert/datacurator/datacurator_f35_j1.6:0.0.1","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"The container provides:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"Fedora 35 base environment\nJulia 1.6.2 base installation\nDataCurator installed in its own environment at /opt/DataCurator.jl","category":"page"},{"location":"installation.html#Test","page":"Installation","title":"Test","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"If you want to verify everything works as it should:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"using Pkg;\nPkg.test(\"DataCurator\")","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"or if you cloned the repository","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"using Pkg;\nPkg.activate('.')\nPkg.test('.')","category":"page"},{"location":"installation.html#Advanced-users","page":"Installation","title":"Advanced users","text":"","category":"section"},{"location":"installation.html#Changing-the-image","page":"Installation","title":"Changing the image","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"See buildimage.sh and singularity1p6.def on how the images are built if you want to modify them.","category":"page"},{"location":"installation.html#Speeding-up-start-up-time","page":"Installation","title":"Speeding up start-up time","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"On first run Julia needs to compile functions and load packages. If you process large datasets, this cost (up to 20s) is meaningless. However, for smaller use case its starts to get annoying.","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"We avoid this cost by using [PackageCompiler.jl] by","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"run a typical example of DataCurator so Julia sees which functions are common\nprecompile all major dependencies into a system image\ntell Julia to use that image instead.","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"This is automated in the Singularity image, but for completeness:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"julia --project=. src/mktest.jl\njulia --project=. --trace-compile=dc_precompile.jl src/curator.jl -r example_recipes/aggregate_new_api.toml\njulia --project=. src/setupimage.jl","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"Now when you want to run DataCurator, do:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"julia --project=/opt/DataCurator.jl --sysimage /opt/DataCurator.jl/sys_img.so /opt/DataCurator.jl/src/curator.jl --recipe <YOURRECIPE.TOML>","category":"page"},{"location":"reference.html#Reference","page":"API Reference","title":"Reference","text":"","category":"section"},{"location":"reference.html","page":"API Reference","title":"API Reference","text":"Modules = [DataCurator]","category":"page"},{"location":"reference.html#DataCurator.ParallelCounter","page":"API Reference","title":"DataCurator.ParallelCounter","text":"Usage\nQT = ParallelCount(zeros(Int64, Base.Threads.nthreads()), Int64(0))\nQT.data[threadid()] = ...\n\n\n\n\n\n","category":"type"},{"location":"reference.html#DataCurator.apply_to-Tuple{Any, Any}","page":"API Reference","title":"DataCurator.apply_to","text":"apply_to(x, f; base=true)\n\n    Where x is a path, if base=false, return f(x), otherwise works on the last part of the path\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.apply_to_image-Union{Tuple{T}, Tuple{Any, AbstractVector{T}}} where T<:AbstractString","page":"API Reference","title":"DataCurator.apply_to_image","text":"apply_to_image(img, operators::AbstractVector{T}) where {T<:AbstractString}\n\nApply each of the operators, left to right, to the image (in place.)\n\nOperators can be any unary operators in scope that can be vectorized, e.g. log, sin, cos, abs, ...\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.bottomup-Tuple{Any, Any, Any}","page":"API Reference","title":"DataCurator.bottomup","text":"topdown(node, expander, visitor; context=nothing, inner=expand_sequential)\n    Recursively apply visitor onto node, until expander(node) -> []\n    If context is nothing, the visitor function gets the current node as sole arguments.\n    Otherwise, context is expected to contain: \"node\" => node, \"level\" => recursion level.\n    Inner is the delegate function that will execute the expand phase. Options are : expand_sequential, expand_threaded\n\n    Traversal is done in a post-order way, e.g. visit after expanding. In other words, leaves before nodes, working from bottom to top.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.buildcomp-Tuple{DataFrames.DataFrame, Any, AbstractString, Any}","page":"API Reference","title":"DataCurator.buildcomp","text":"buildcomp(dataframe, column, operator, value)\n\nDispatches to the correct form of operator.(df[:,col], value)\n\noperator (String) can be one of:\nless, leq, smaller than, more, greater than, equals, euqal, is, geq, isnan, isnothing, ismissing, iszero, <, >, <=, >=, ==\n\nThe operator can be negated: [\"not\", \"less\"]\nMulti-argument comparison are also supported:\n- between [x, y]\n- in [x, y, z]\n\nYou can repeat columns, but non-existing columns are an error.\n\n```julia\ndf = DataFrame(zeros(2,2),:auto)\ndf[1,:] .= 5\ncols, ops, vals = [\"x1\", \"x1\", \"x1\"], [[\"not\", \"in\"],\"less\", [\"not\", \"isnan\"]], [[1,2,3,5],10, \"NaN\"]\n@info reduce(&., buildcomp(df, c, o, v) for (c, o, v) in zip([\"x1\", \"x1\", \"x1\"], )\n```\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.collapse_functions-Tuple{Any}","page":"API Reference","title":"DataCurator.collapse_functions","text":"collapse_functions(fs; left_to_right=false)\n\nGeneralization of (f, g) --> x->(f(g(x))) for any set of functions\nleft_to_right : g(f(x)), otherwise f(g(x))\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.decode_dataframe_function-Tuple{AbstractVector{T} where T, AbstractDict}","page":"API Reference","title":"DataCurator.decode_dataframe_function","text":"decode_dataframe_function(x::AbstractVector, glob::AbstractDict)\n\nDecodes an entry of the form [command, [(col, op, vals)+]] into a function object for the template\n\nBoth the single tuple version\n    command, (col, op, vals)\nand longer version\n    command, [(col, op, vals), ...]\nare valid, and dealt by m dispatch.\n\nNote that an entry can be any of:\n    - col, op   (for isnan, isnothing, ...)\n    - col, op, val (for <, >, ...)\n    - col, op, vals (for in, between, ....)\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.decode_function-Tuple{AbstractDict, AbstractDict}","page":"API Reference","title":"DataCurator.decode_function","text":"decode_function(f::AbstractDict, glob::AbstractDict; condition=false)\n\nDispatched method for transform entries\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.delegate-Tuple{Any, Any}","page":"API Reference","title":"DataCurator.delegate","text":"delegate(config, template)\nUses the configuration, and template create by `create_template_from_toml', to execute the verifier as specified.\nReturns the counters and file lists, if any are defined.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.describe_image-Tuple{AbstractArray, Int64}","page":"API Reference","title":"DataCurator.describe_image","text":"describe_image(x::AbstractArray, axis::Int64)::DataFrame\n\nDescribe the array x sliced along axis.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.gaussian-Tuple{Any, Int64}","page":"API Reference","title":"DataCurator.gaussian","text":"gaussian(img, sigma)\n\nGaussian blur with σ\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.generate_counter","page":"API Reference","title":"DataCurator.generate_counter","text":"Make a count and counting functor that can be incremented by threads\n```\nc, ct = generate_counter()\nct(something)\n@info c # \"Counter = 1\"\n# Threaded version\npc, pct = generate_counter(true; x->reduce(*, size(x))))\na = zeros(3,3,3)\npct(a) # Threadsafe writes\n# Printing the counter is not threadsafe, only read when all threads have finished.\n@info pc # \"Counter = 27\"\n\n\n\n\n\n","category":"function"},{"location":"reference.html#DataCurator.getextent-Tuple{Any}","page":"API Reference","title":"DataCurator.getextent","text":"For a bounding box, get the XY span (diagonal), Z range, and z center\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.invert-Tuple{AbstractArray}","page":"API Reference","title":"DataCurator.invert","text":"invert(image)\n\nFor a normed ([0-1]) image, return  1 - image\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.laplacian-Tuple{Any}","page":"API Reference","title":"DataCurator.laplacian","text":"laplacian(image)\n\nLaplacian of image (2nd derivative of intensity)\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.parse_acsym-Tuple{Any, Any}","page":"API Reference","title":"DataCurator.parse_acsym","text":"Helper function to parse all functions\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.read_counter-Tuple{Any}","page":"API Reference","title":"DataCurator.read_counter","text":"read_counter(counter)\n\nSum a parallel or sequential counter where counter.data[threadid()]\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.reduce_images-Tuple{Any, AbstractString, AbstractString}","page":"API Reference","title":"DataCurator.reduce_images","text":"reduce_images(list, fname::AbstractString, op::AbstractString)\n\nGiven list of K-D images (tif), stack to K+1, then apply `op` along K+1 th dimension.\nSave to fname in K-D tif\n\nExample\nmaxproject = (list, fname) -> reduce_images(list, fname, \"maximum\")\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.send_to-Tuple{Any, Any, Any}","page":"API Reference","title":"DataCurator.send_to","text":"/a/b/c, /a/b/c/d/e, /x/y\n    if keeprelative\n    -> /x/y/c/d/e\n    if ~keeprelative\n    -> /x/y/e\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.threshold_image-Tuple{AbstractArray, AbstractString, Number}","page":"API Reference","title":"DataCurator.threshold_image","text":"treshold(image, operator, value)\n\nSet the image to zero where operator(image, value) == true.\nOperator can be one of '<', '>', 'abs >', 'abs <'.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.tmpcopy-Tuple{Any}","page":"API Reference","title":"DataCurator.tmpcopy","text":"tmpcopy(x; seed=0, length=40)\n\nCreate a temporary copy of file x (with same extension), of length 40.\n40 means there's a 1/10000 for a collision of 2 identical files.\nNote that this function is used on executing a template, in parallel, so it's not the total of number files being processed, but the number of files being processed in the same window of time.\nReturn the temporary file name\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.topdown-Tuple{Any, Any, Any}","page":"API Reference","title":"DataCurator.topdown","text":"topdown(node, expander, visitor; context=nothing, inner=expand_sequential)\nRecursively apply visitor onto node, until expander(node) -> []\nIf context is nothing, the visitor function gets the current node as sole arguments.\nOtherwise, context is expected to contain: \"node\" => node, \"level\" => recursion level.\nInner is the delegate function that will execute the expand phase. Options are : expand_sequential, expand_threaded\n\nTraversal is done in a pre-order way, e.g. visit before expanding.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.transform_copy-Tuple{Any, Any}","page":"API Reference","title":"DataCurator.transform_copy","text":"transform_copy(x, f)\n    x' = f(x) for a file or directory, a copy rather than a move. Refuses to act if x' exists.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.transform_inplace-Tuple{Any, Any}","page":"API Reference","title":"DataCurator.transform_inplace","text":"transform_inplace(x, f)\n    x = f(x) for a file or directory. Refuses to act if x' exists.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.verifier-Tuple{Any, Dict, Int64}","page":"API Reference","title":"DataCurator.verifier","text":"verifier(node, templater::Dict, level::Int)\nDispatched function to verify at recursion level with conditions set in templater[level] for node.\nWill apply templater[-1] as default if it's given, else no-op.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.verifier-Tuple{Any, Vector{T} where T, Int64}","page":"API Reference","title":"DataCurator.verifier","text":"verifier(node, template::Vector, level::Int)\nDispatched function to verify at recursion level with conditions set in template for node.\nLevel is ignored for now, except to debug\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.verify_dispatch-Tuple{Any}","page":"API Reference","title":"DataCurator.verify_dispatch","text":"verify_dispatch(context)\nUse multiple dispatch to call the right function verifier.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.verify_template-Tuple{Any, Any}","page":"API Reference","title":"DataCurator.verify_template","text":"verify_template(start, template; expander=expand_filesystem, traversalpolicy=bottomup, parallel_policy=\"sequential\")\nRecursively verifies a dataset anchored at start using a given template.\nFor example, start can be the top directory of a filesystem.\nA template has one of 2 forms:\n    - template = [(condition, action_on_fail), (condition, action), ...]\n        - where condition accepts a node and returns true if ok, false if not.\n        - action is a function that accepts a node as argument, and is trigger when condition fails, example warn_on_fail logs a warning\nTraversalpolicy is bottomup or topdown. For modifying actions bottomup is more stable.\nParallel_policy is one of \"sequential\" or \"parallel\". While parallel execution can be a lot faster, be very careful if your actions share global state.\n\n\n\n\n\n","category":"method"},{"location":"reference.html#DataCurator.wrap_transform-Tuple{AbstractString}","page":"API Reference","title":"DataCurator.wrap_transform","text":"wrap_transform(x::AbstractString)\n\nFor file x, generate a temp copy before aggregation on a file list\n\n\n\n\n\n","category":"method"},{"location":"index.html#DataCurator.jl-Documentation","page":"Index","title":"DataCurator.jl Documentation","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"A multithreaded package to validate, curate, and transform large heterogeneous datasets using reproducible recipes, which can be created both in TOML human readable format, or in Julia.","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"(Image: Concept)","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"DataCurator is a Swiss army knife that ensures:","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"pipelines can focus on the algorithm/problem solving\nhuman readable recipes for future reproducibility\nvalidation huge datasets at high speed\nout-of-the-box operation without the need for code or dependencies","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"(Image: Concept)","category":"page"},{"location":"index.html#Quickstart","page":"Index","title":"Quickstart","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"We'll show 2 simple examples on how to get started, for a more complete manual please see individual sections in the left pane.","category":"page"},{"location":"index.html#Validate","page":"Index","title":"Validate","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"Check that a directory only contains CSV files, list them in a file, and list any file that's incorrect.","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"[global]\ninputdirectory = \"testdir\"\n[any]\nconditions=[\"is_csv_file\"]\nactions = [[\"log_to_file\", \"non_csvs.txt\"]]\ncounter_actions=[[\"log_to_file\", \"csvs.txt\"]]","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"Execute:","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"./DataCurator.sif -r myrecipe.toml","category":"page"},{"location":"index.html#Curate","page":"Index","title":"Curate","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"Flatten all .txt files, flatten refers to extracting all files from a nested hierarchy (a directory with many subdirectories, each with their own subdirectories and so forth) into 1 single set of files in 1 directory, for ease of processing.","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"Create a recipe.toml file with:","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"[global]\nact_on_success = true\ninputdirectory = \"testdir\"\nregex=true\n[any]\nall=true\nconditions = [\"isfile\", [\"endswith\", \".*.txt\"]]\nactions = [[\"flatten_to\", \"outdir\"]]","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"./DataCurator.sif -r myrecipe.toml","category":"page"},{"location":"index.html#A-more-complex-example","page":"Index","title":"A more complex example","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"In full_api.toml you can see an example of how you can specify an entire image processing pipeline with a simple recipe.","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"...\nactions=[\n        {name_transform=[\"tolowercase\"],\n        content_transform=[\n                        [\"slice_image\", [1,2],[[20,50],[20,50]]],\n                        [\"gaussian\", 3],\n                        \"laplacian\",\n                        [\"threshold_image\", \"abs <\", 0.01],\n                        [\"apply_to_image\", [\"abs\"]],\n                        [\"apply_to_image\", [\"log\"]]\n                        \"otsu_threshold_image\",\n                        \"erode_image\"\n                        ],\n                        mode=\"copy\"}\n        ]\n...","category":"page"}]
}
