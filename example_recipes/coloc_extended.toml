[global]
act_on_success=true
inputdirectory = "testdir"
[any]
all=true
conditions = ["is_dir"]
# This recipe will be executed on CSV files organized per directory
# It will load SMLM CSV data, do temporal alignment and save the result
# Next, colocalization will be run on the resulting 2D images
# 500 = max distance between fiducials
# 5 = max number of fiducials to use
# 3 refers to the window size to use in colocalization
# "filter" runs a basic adaptive intensity filter (mean + k std) on the images before colocalization.
# 1 = k, so here each channel has pixels removed if their intensity (point cloud density) is lower than u + 1 std
# alternatively, you can also say ..., "segment", 1 to run otsu thresholding on the images before colocalization, the `1' scales the otsu threshold value, higher is more stringent, lower is less stringent
actions=[["smlm_alignment",".csv", "is_thunderstorm", 500, 5], ["image_colocalization", 3, "C[1,2].tif", "is_2d_img", "filter", 1]]