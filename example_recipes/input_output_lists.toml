[global]
act_on_success=true
## Define a counter that increments for each file, and one that increments by filesize in bytes
# counters = ["c1", ["c2", "size_of_file"]]
counters = [["c1", "size_of_file"]]
## If you want to collect files in a pattern for batch processing
## The first will collect files with their full path, the second will change path to 'outpath'
## This is ideal for e.g. HPC/SLURM processing
file_lists = ["infiles", ["outfiles", "outpath"]]
# file_lists = ["X"] is equivalent to
# file_lists = [{name="X", tranformer="identity", aggregator="shared_list_to_file"}]
# file_lists = ["X", "/dev/x"] is equivalent to
# file_lists = [{name="X", tranformer=["change_path", "/dev/X"], aggregator="shared_list_to_file"}]
# file_lists = [["X", "concat_to_table"]] is equivalent to
# file_lists = [{name="X", tranformer="identity", aggregator="shared_list_to_table"}]

inputdirectory = "testdir"
[any]
all=true
# conditions=[["endswith", "*.tif"]]
conditions = ["isfile"]
# actions=[["count", "c1"]]
actions=[["add_to_file_list", "outfiles"], ["add_to_file_list", "infiles"]]
#actions=[["count", "c1"], ["count", "c2"], ["add_to_file_list", "infiles"], ["add_to_file_list", "outfiles"]]
