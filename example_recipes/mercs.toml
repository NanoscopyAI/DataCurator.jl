## A recipe for a dataset of mito/er 3D volumes
## Root
### Replicate (number)
#### Condition/celltype
##### Series XYZ (cell nr)
###### ...1.tif (3D)
###### ...2.tif (3D)


## We want to
## Check the structure is valid
## Remove anything invalid
## What is left, compile into input and output lists for batch processing

[global]
act_on_success=false
inputdirectory = "/tmp/testdataset"
hierarchical=true
parallel=false
common_actions = {do_on_invalid=[["all", "show_warning", ["log_to_file", "errors.txt"]]]}
common_conditions = {is_3d_channel=[["all", "is_tif_file", "is_3d_img", "filename_ends_with_integer"]], dir_only=[["all", "isdir", ["not", "is_hidden"]]]}
file_lists=["inlist", ["outlist", "/tmp/output"]]
regex=true
[any]
# Whatever is not defined below, e.g. too deep of a level --> fail and delete
all=true
conditions=["never"]
actions=["do_on_invalid"]

[level_1]
conditions=["dir_only"]
actions=["do_on_invalid"]


[level_2]
all=true
conditions=["dir_only", "ends_with_integer"]
actions=["do_on_invalid"]

[level_3]
conditions=["dir_only"]
actions=["do_on_invalid"]

[level_4]
all=true
conditions=["dir_only", ["startswith", "Serie"], "ends_with_integer", ["has_n_files", 2]]
actions=["do_on_invalid"]

[level_5]
conditions=["is_3d_channel"]
actions=["do_on_invalid"]
counter_actions=[["add_path_to_file_list", "inlist"], ["add_path_to_file_list", "outlist"]]
