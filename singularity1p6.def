BootStrap: docker
From: fedora:35

%files
    DataCurator.jl.zip /opt/DataCurator.jl.zip
    runjulia.sh        /opt/runjulia.sh

%post
    ## Get the tools we'll need
    dnf install -y wget unzip

    ## Setup Julia
    export JLMJV=1.6
    export JLV=$JLMJV.2
    export JULIA_TGZ=julia-$JLV-linux-x86_64.tar.gz
    mkdir -p /opt/julia && cd /opt/julia
    wget https://julialang-s3.julialang.org/bin/linux/x64/$JLMJV/$JULIA_TGZ && tar -xf $JULIA_TGZ && rm $JULIA_TGZ
    export PATH=/opt/julia/julia-$JLV/bin:$PATH
    export JULIA_DEPOT_PATH=/opt/juliadepot
    mkdir -p $JULIA_DEPOT_PATH
    chmod 755 /opt/runjulia.sh
    ## Setup local package
    export PKGNAME="DataCurator"
    cd /opt && unzip $PKGNAME.jl.zip
    export LOCALPKG=/opt/$PKGNAME.jl
    cd $LOCALPKG
    julia --project=$LOCALPKG -e 'using Pkg; Pkg.update(); ENV["PYTHON"]=""; Pkg.build(); Pkg.instantiate()'
    julia --project=$LOCALPKG -e 'using DataCurator; using Pkg;'
    ## Build the precompiled image for faster start
    julia --project=$LOCALPKG setupimage.jl
    rm -rf /opt/juliadepot/logs
    rm -rf /opt/juliadepot/scratchspaces
    ln -s /dev/shm/ /opt/juliadepot/logs
    ln -s /dev/shm/ /opt/juliadepot/scratchspaces

    ## Cleanup
    dnf remove -y wget unzip

%environment
    export LC_ALL=C
    export LOCALPKG=/opt/DataCurator.jl
    #/opt/julia/julia-1.6.2/bin
    export JLMJV=1.6
    export JLV=$JLMJV.2
    export PATH=/opt/julia/julia-$JLV/bin:$PATH
    export JULIA_DEPOT_PATH=/opt/juliadepot

%runscript
    echo "Starting DataCurator.jl"
    echo "Version 0.1"
    echo `pwd`
    echo "Expected usage : ./image.sif --recipe your_recipe.toml [--verbose]"
    echo "OR to create batch processing lists and update a template:"
    echo "OR : ./image.sif --recipe your_recipe.toml [--verbose] --update --inputdirectory $A --outputdirectory $B"
    /opt/runjulia.sh "$@"

%labels
    Author Ben Cardoen, bcardoen@sfu.ca
    Version v0.0.1
    License AGPLv3

%help
    This is a container to offer DataCurator without altering the local user environment, for testing purposes.
    Usage (interactively):
    singularity shell DataCurator.sif
    Singularity> julia --project=/opt/DataCurator.jl
    or
    singularity exec DataCurator.sif julia --project=/opt/DataCurator.jl <yourcode>
